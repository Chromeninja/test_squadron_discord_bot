name: Run Tests

on:
  push:
  pull_request:

jobs:
  test:
    name: Python ${{ matrix.python-version }} tests
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11", "3.12"]

    env:
      # Make sure bot.py sees a token so it doesn't raise
      DISCORD_TOKEN: ${{ secrets.DISCORD_TOKEN }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}-${{ matrix.python-version }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Upgrade pip
        run: python -m pip install --upgrade pip

      - name: Install dependencies
        run: |
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          fi
          pip install pytest pytest-asyncio coverage ruff mypy

      - name: Copy example config for tests
        run: |
          mkdir -p config
          cp config/config-example.yaml config/config.yaml

      - name: Run linting
        run: ruff check .

      - name: Run type checking
        run: mypy .

      - name: Run tests with coverage
        run: |
          coverage run -m pytest -q
          coverage xml

      - name: Upload coverage as artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.python-version }}
          path: coverage.xml
