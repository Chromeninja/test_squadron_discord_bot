[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "test-squadron-discord-bot"
version = "1.0.0"
description = "A Discord bot for managing TEST Squadron community functions"
authors = [{name = "ChromeNinja", email = "t.riley.garrett@gmail.com"}]
license = {text = "Proprietary"}
requires-python = ">=3.11"
dependencies = [
    "discord.py>=2.3.1,<3.0.0",
    "PyYAML>=6.0,<7.0.0",
    "python-dotenv>=1.0.0,<2.0.0",
    "aiohttp>=3.8.4,<4.0.0",
    "beautifulsoup4>=4.12.2,<5.0.0",
    "lxml>=4.9.3,<5.0.0",
    "aiosqlite>=0.20.0,<1.0.0",
    "aiolimiter>=1.1.0,<2.0.0",
    "PyNaCl==1.5.0",
    "psutil>=5.9.0,<6.0.0",
    "pydantic>=2.0.0,<3.0.0",
    "sqlalchemy[asyncio]>=2.0.0,<3.0.0",
    "typing-extensions>=4.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.2.0",
    "pytest-asyncio>=0.23.6",
    "mypy>=1.8.0",
    "ruff>=0.3.0",
    "pre-commit>=3.6.0",
    "types-PyYAML",
    "types-beautifulsoup4",
    "pytest-cov>=4.0.0",
]

[tool.ruff]
target-version = "py311"
line-length = 88
show-fixes = true
src = ["."]

[tool.ruff.lint]
select = [
    "E",      # pycodestyle errors
    "W",      # pycodestyle warnings
    "F",      # pyflakes
    "I",      # isort
    "N",      # pep8-naming
    "UP",     # pyupgrade
    "YTT",    # flake8-2020
    "S",      # flake8-bandit
    "B",      # flake8-bugbear
    "A",      # flake8-builtins
    "COM",    # flake8-commas
    "C4",     # flake8-comprehensions
    "DTZ",    # flake8-datetimez
    "T20",    # flake8-print
    "SIM",    # flake8-simplify
    "TCH",    # flake8-type-checking
    "ARG",    # flake8-unused-arguments
    "PTH",    # flake8-use-pathlib
    "ERA",    # eradicate
    "PD",     # pandas-vet
    "PGH",    # pygrep-hooks
    "PL",     # pylint
    "TRY",    # tryceratops
    "NPY",    # numpy
    "RUF",    # ruff-specific
]

ignore = [
    "S101",   # assert used
    "T20",    # print found
    "COM812", # missing-trailing-comma (conflicts with formatter)
    "ISC001", # single-line-implicit-string-concatenation (conflicts with formatter)
]

[tool.ruff.lint.per-file-ignores]
"tests/**/*" = ["PLR2004", "S101", "TID252", "ARG"]
"bot/adapters/discord/cogs/*" = ["PLR0913", "PLR0915"]  # Many parameters in Discord cogs

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=bot",
    "--cov=cogs",
    "--cov=helpers",
    "--cov=services",
    "--cov=utils",
    "--cov=verification",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "--cov-fail-under=44",
]
asyncio_mode = "auto"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["bot", "cogs", "helpers", "services", "utils", "verification"]
omit = [
    "*/tests/*",
    "*/test_*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "discord.*",
    "aiohttp.*",
    "bs4.*",
    "lxml.*",
    "aiosqlite.*",
    "aiolimiter.*",
]
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
